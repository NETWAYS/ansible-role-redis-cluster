---

- name: "Set redis service"
  template:
    src: redis.service.j2
    dest: "{{ redis_systemd_directory }}/{{ item.redis_instance_name }}.service"
    mode: '0644'
    owner: root
    group: root
  when: "ansible_service_mgr == 'systemd'"
  loop: "{{ redis_configurations | default([]) }}"
  loop_control:
    label: "{{ item.redis_instance_name }}"
  notify: Daemon reload

- name: Flush handlers
  meta: flush_handlers

- name: "Create redis config directory"
  file:
    path: "{{ redis_config_directory }}"
    state: directory
    mode: '0700'
    owner: "{{ redis_user_name }}"
    group: "{{ redis_group_name }}"
    setype: redis_conf_t
  when: redis_config_directory != "/etc"

- name: "Set redis config"
  template:
    src: redis.conf.j2
    dest: "{{ redis_config_directory }}/{{ item.redis_instance_name }}.conf"
    owner: "{{ redis_user_name }}"
    group: "{{ redis_group_name }}"
    mode: '0660'
    setype: redis_conf_t
  register: redis_config
  loop: "{{ redis_configurations | default([]) }}"
  loop_control:
    label: "{{ item.redis_instance_name }}"

- name: "Restart redis service(s) if config changed"
  systemd:
    state: restarted
    name: "{{ item.redis_instance_name }}"
  when: redis_config.changed
  loop: "{{ redis_configurations | default([]) }}"
  loop_control:
    label: "{{ item.redis_instance_name }}"

- name: "Start and enable redis service(s)"
  systemd:
    state: started
    name: "{{ item.redis_instance_name }}"
    enabled: yes
  loop: "{{ redis_configurations | default([]) }}"
  loop_control:
    label: "{{ item.redis_instance_name }}"
